<?php declare(strict_types=1);

/** @var \Hyva\Admin\Block\Adminhtml\HyvaGrid $block */
/** @var \Magento\Framework\Escaper $escaper */

$grid       = $block->getGrid();
$navigation = $grid->getNavigation();
$uniqueId = '_' . uniqid();
?>
<div class="hyva-admin-grid"
     x-data="initDataTable<?= /** @noEscape */ $uniqueId ?>()"
     x-init="refs=$refs; initState();">
    <div class="max-w-full px-0 py-6 mx-auto">
        <div class="flex items-start justify-between mb-4">
            <div class="flex-1 pr-4">
                <div class="relative flex flex-wrap md:w-3/4 gap-x-8">
                    <?php if ($navigation->isPagerEnabled()): ?>
                    <div class="self-center">
                        <span class="font-medium text-md mr-4">
                            <?= $escaper->escapeHtml(__('Current Page:')) ?>
                        </span>
                        <?= (int) $navigation->getCurrentPageNumber() ?>
                    </div>

                    <div class="self-center">
                        <span class="font-medium text-md mr-4">
                            <?= $escaper->escapeHtml(__('Total Pages:')) ?>
                        </span>
                        <?= (int) $navigation->getPageCount() ?>
                    </div>

                    <div>
                        <label for="pageSize" class="font-medium text-md mr-4">
                            <?= $escaper->escapeHtml(__('Rows Per Page:')) ?>
                        </label>
                        <script>
                            function goToOptionUrl(option) {
                                const url = option.value;
                                if (url) {
                                    window.location.href=url;
                                }
                            }
                        </script>
                        <select id="pageSize" onchange="goToOptionUrl(this.selectedOptions[0])"
                                class="form-select">
                            <?php foreach ($navigation->getPageSizes() as $pageSize): ?>
                                <?php $currentPageSize = $navigation->getPageSize() === $pageSize ?>
                            <option value="<?= $escaper->escapeUrl($navigation->getUrlForPageSize($pageSize)) ?>"
                                <?= $currentPageSize ? 'selected' : '' ?>>
                                <?= (int) $pageSize ?>
                            </option>
                            <?php endforeach; ?>
                        </select>
                    </div>

                    <div class="relative z-0 inline-flex rounded-md shadow-sm">
                        <?php if ($navigation->hasPreviousPage()): ?>
                            <a href="<?= $escaper->escapeUrl($navigation->getFirstPageUrl()) ?>"
                            class="relative inline-flex items-center px-4 py-2 font-medium text-gray-700 bg-white
                                border border-gray-300 rounded-l-md hover:bg-gray-50 focus:z-10 focus:outline-none
                                focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
                            >
                                <?= $escaper->escapeHtml(__('First Page')) ?>
                            </a>
                            <a href="<?= $escaper->escapeUrl($navigation->getPreviousPageUrl()) ?>"
                            class="relative inline-flex items-center px-4 py-2 -ml-px font-medium text-gray-700 bg-white
                                border border-gray-300 hover:bg-gray-50 focus:z-10 focus:outline-none
                                focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
                            >
                                <?= $escaper->escapeHtml(__('Previous Page')) ?>
                            </a>
                        <?php else: ?>
                            <span class="relative inline-flex items-center px-4 py-2 font-medium text-gray-300 bg-white
                                border border-gray-300 cursor-not-allowed rounded-l-md">
                                <?= $escaper->escapeHtml(__('First Page')) ?>
                            </span>
                            <span class="relative inline-flex items-center px-4 py-2 -ml-px font-medium text-gray-300
                                bg-white border border-gray-300 cursor-not-allowed">
                                <?= $escaper->escapeHtml(__('Previous Page')) ?>
                            </span>
                        <?php endif; ?>
                        <?php if ($navigation->hasNextPage()): ?>
                            <a href="<?= $escaper->escapeUrl($navigation->getNextPageUrl()) ?>"
                            class="relative inline-flex items-center px-4 py-2 -ml-px font-medium text-gray-700 bg-white
                                border border-gray-300 hover:bg-gray-50 focus:z-10 focus:outline-none
                                focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
                            >
                                <?= $escaper->escapeHtml(__('Next Page')) ?>
                            </a>
                            <a href="<?= $escaper->escapeUrl($navigation->getLastPageUrl()) ?>"
                            class="relative inline-flex items-center px-4 py-2 -ml-px font-medium text-gray-700 bg-white
                                border border-gray-300 rounded-r-md hover:bg-gray-50 focus:z-10 focus:outline-none
                                focus:ring-1 focus:ring-blue-500 focus:border-blue-500"
                            >
                                <?= $escaper->escapeHtml(__('Last Page')) ?>
                            </a>
                        <?php else: ?>
                            <span class="relative inline-flex items-center px-4 py-2 -ml-px font-medium text-gray-300
                            bg-white border border-gray-300 cursor-not-allowed"
                            >
                                <?= $escaper->escapeHtml(__('Next Page')) ?>
                            </span>
                            <span class="relative inline-flex items-center px-4 py-2 -ml-px font-medium text-gray-300
                            bg-white border border-gray-300 cursor-not-allowed rounded-r-md"
                            >
                                <?= $escaper->escapeHtml(__('Last Page')) ?>
                            </span>
                        <?php endif; ?>
                    </div>
                    <?php endif; ?>

                    <?php if ($navigation->hasAppliedFilters()): ?>
                    <div>
                        <a href="<?= $escaper->escapeUrl($navigation->getResetFiltersUrl()) ?>"
                           class="btn btn-primary">
                            <?= $escaper->escapeHtml(__('Reset filters')) ?>
                        </a>
                    </div>
                    <?php endif; ?>
                </div>
            </div>
            <div>
                <div class="flex">
                    <div class="relative">
                        <?php foreach ($navigation->getButtons() as $button): ?>
                            <?= $button->getHtml() ?>
                        <?php endforeach; ?>

                        <button @click.prevent="open = !open"
                                class="inline-flex items-center px-2 py-2 font-semibold text-gray-500 bg-white
                                    rounded-lg hover:text-blue-500 focus:outline-none focus:shadow-outline md:px-4"
                        >
                            <svg xmlns="http://www.w3.org/2000/svg"
                                 class="w-6 h-6 md:hidden md:visible"
                                 viewBox="0 0 24 24"
                                 stroke-width="2"
                                 stroke="currentColor"
                                 fill="none"
                                 stroke-linecap="round"
                                 stroke-linejoin="round"
                            >
                                <rect x="0" y="0" width="24" height="24" stroke="none"></rect>
                                <path
                                    d="M5.5 5h13a1 1 0 0 1 0.5 1.5L14 12L14 19L10 16L10 12L5 6.5a1 1 0 0 1 0.5 -1.5" />
                            </svg>
                            <span class="hidden md:block md:visible">
                                <?= $escaper->escapeHtml(__('Display')) ?>
                            </span>
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 ml-1" width="24" height="24"
                                 viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none"
                                 stroke-linecap="round" stroke-linejoin="round">
                                <rect x="0" y="0" width="24" height="24" stroke="none"></rect>
                                <polyline points="6 9 12 15 18 9" />
                            </svg>
                        </button>

                        <div x-show="open"
                             @click.away="open = false"
                             class="absolute top-0 right-0 z-40 block p-4 mt-16 -mr-1 overflow-y-auto bg-white
                                rounded-lg shadow-lg"
                             style="max-height: 75vh;">
                            <template x-for="heading in headings">
                                <label
                                    class="flex items-center justify-start px-4 py-2 text-truncate hover:bg-gray-100">
                                    <div class="mr-3 text-teal-600">
                                        <input type="checkbox"
                                               class="form-checkbox focus:outline-none focus:shadow-outline"
                                               :checked="isColumnVisible(heading.key)"
                                               @click="toggleColumn(heading.key)"
                                        >
                                    </div>
                                    <div class="text-gray-700 select-none"
                                         x-text="heading.value">
                                    </div>
                                </label>
                            </template>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="flex items-center mb-4 gap-x-8">
            <?php if ($massActions = $grid->getMassActions()): ?>
                <?php $massActionFormId = 'hyva-grid-massaction-' . $grid->getGridName() ?>
            <form id="<?= $escaper->escapeHtmlAttr($massActionFormId) ?>"
                  x-ref="massaction-form"
                  method="post">
                <?= $block->getBlockHtml('formkey'); ?>
                <label for="massAction<?= /** @noEscape */ $uniqueId ?>" class="font-medium text-md mr-4">
                    <?= $escaper->escapeHtml(__('Mass Actions:')) ?>
                </label>
                <select @change="doMassAction($event.target.selectedOptions[0])"
                        @keydown.enter="doMassAction($event.target.selectedOptions[0])"
                        id="massAction<?= /** @noEscape */ $uniqueId ?>"
                        name="massAction"
                        x-ref="massaction-select"
                        class="form-select"
                        form="<?= $escaper->escapeHtmlAttr($massActionFormId) ?>">
                    <option disabled selected hidden>
                        <?= $escaper->escapeHtml(__('Select an action')) ?>
                    </option>
                    <?php foreach ($massActions as $massAction): ?>
                        <?php $massActionUrl = $block->getUrl($massAction->getUrl()) ?>
                        <option data-require-confirm="<?= $massAction->requireConfirmation() ? 'true' : 'false' ?>"
                                value="<?= $escaper->escapeUrl($massActionUrl) ?>">
                            <?= $escaper->escapeHtml($massAction->getLabel()) ?>
                        </option>
                    <?php endforeach; ?>
                </select>
                <?php if ($massActions) { ?></form><?php } ?>
                <?php endif; ?>
            <div x-cloak x-show="selectedRows.length > 0">
                <span class="font-medium text-md">
                    <?= $escaper->escapeHtml(__('Total selected:')) ?>
                </span> <span x-text="selectedRows.length" >
                </span>
                <a href="#" @click.prevent="selectedRows=[]" class="ml-4 inline-flex btn btn-primary">
                    <?= $escaper->escapeHtml(__('reset selection')) ?></a>
            </div>
            <?php if ($navigation->hasFilters()): ?>
            <form id="<?= $escaper->escapeHtmlAttr($navigation->getFilterFormId()) ?>"
                  method="get"
                  action="<?= $escaper->escapeUrl($navigation->getFilterFormUrl()) ?>">
                <input type="submit" hidden />
            </form>
            <?php endif; ?>
        </div>
    </div>

    <div class="flex flex-col table-container">
        <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
            <div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
                <div class="overflow-hidden border-b border-gray-200">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead>
                        <tr class="text-left table-head">
                            <?php if ($massActions): ?>
                                <th class="select-all">
                                    <label
                                        class="inline-flex items-center justify-between px-2 py-2 rounded-lg
                                            cursor-pointer hover:bg-gray-200">
                                        <input type="checkbox"
                                               x-ref="select-all"
                                               class="form-checkbox focus:outline-none focus:shadow-outline"
                                               @click="selectAllCheckbox($event);">
                                    </label>
                                </th>
                            <?php endif; ?>
                            <?php foreach ($grid->getColumnDefinitions() as $column): ?>
                                <?php $isSortedByColumn = $column->isSortable() &&
                                    $navigation->getSortByColumn() === $column->getKey() ?>
                                <?php $newDirection = $isSortedByColumn &&
                                    $navigation->isSortOrderAscending() ? 'desc' : 'asc' ?>
                                <th class="relative pr-12 col-<?= $escaper->escapeHtml($column->getKey()) ?>
                                        <?php if ($column->isSortable()): ?> sortable<?php endif; ?>"
                                    x-ref="col-<?= $escaper->escapeHtmlAttr($column->getKey()) ?>"
                                    x-show="isColumnVisible('col-<?= $escaper->escapeHtmlAttr($column->getKey()) ?>')"
                                    <?php if ($column->isSortable()): ?>
                                        onclick="window.location.href =
                                            '<?= $escaper
                                                ->escapeUrl(
                                                    $navigation->getSortByUrl($column->getKey(), $newDirection)
                                                ) ?>'"
                                    <?php endif; ?>>
                                    <?= $escaper->escapeHtml($column->getLabel()) ?>
                                    <?php if ($isSortedByColumn && $navigation->isSortOrderAscending()): ?>
                                    <span class="absolute right-0 w-6 h-6 my-1 mr-2 align-middle text-primary">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none"
                                             viewBox="0 0 24 24" stroke="currentColor"
                                        >
                                            <path stroke-linecap="round"
                                                  stroke-linejoin="round"
                                                  stroke-width="2"
                                                  d="M3 4h13M3 8h9m-9 4h6m4 0l4-4m0 0l4 4m-4-4v12"
                                            />
                                        </svg>
                                    </span>
                                    <?php endif; ?>
                                    <?php if ($isSortedByColumn && !$navigation->isSortOrderAscending()): ?>
                                        <span class="absolute right-0 w-6 h-6 mr-2 align-middle text-primary">
                                            <svg xmlns="http://www.w3.org/2000/svg"
                                                 fill="none"
                                                 viewBox="0 0 24 24"
                                                 stroke="currentColor"
                                            >
                                                <path stroke-linecap="round"
                                                      stroke-linejoin="round"
                                                      stroke-width="2"
                                                      d="M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4"
                                                />
                                            </svg>
                                        </span>
                                    <?php endif; ?>
                                </th>
                            <?php endforeach; ?>
                            <?php if ($actions = $grid->getActions()): ?>
                                <th class="sticky top-0 table-cell px-6 py-2 text-xl font-semibold tracking-wider
                                    text-gray-300 uppercase align-middle border border-gray-200 actions
                                    bg-container-darker"
                                >
                                    <?= $escaper->escapeHtml(__('Actions')) ?>
                                </th>
                            <?php endif; ?>
                        </tr>
                        <?php if ($navigation->hasFilters()): ?>
                        <tr class="table-filters">
                            <?php if ($massActions): ?>
                                <th class="sticky top-0 px-3 py-2 border border-gray-200"></th>
                            <?php endif; ?>
                            <?php foreach ($grid->getColumnDefinitions() as $column): ?>
                            <th class="col-<?= $escaper->escapeHtml($column->getKey()) ?> sticky top-0 border
                                border-gray-200 px-6 py-2 text-gray-600 tracking-wider text-xl table-cell align-left"
                                x-show="isColumnVisible('col-<?= $escaper->escapeHtmlAttr($column->getKey()) ?>')">
                                <?php $filter = $navigation->getFilter($column->getKey()) ?>
                                <?= $filter ? $filter->getHtml() : '' ?>
                            </th>
                            <?php endforeach; ?>
                            <?php if ($actions): ?>
                                <th class="sticky top-0 px-3 py-2 border border-gray-200"></th>
                            <?php endif; ?>
                        </tr>
                        <?php endif; ?>
                        </thead>
                        <tbody>
                        <?php foreach ($grid->getRows() as $row): ?>
                            <?php if ($rowAction = $actions[$grid->getRowActionId()] ?? false) {
                                $rowActionUrl       = $block->getUrl($rowAction->getUrl(), $rowAction->getParams($row));
                                $rowActionAttribute = sprintf(
                                    "onclick=\"window.location.href='%s'\"",
                                    $escaper->escapeJs($rowActionUrl)
                                );
                            } else {
                                $rowActionAttribute = '';
                            } ?>
                            <tr class="table-content">
                                <?php if ($massActions): ?>
                                    <td class="px-3 border border-gray-100">
                                        <label
                                            class="inline-flex items-center justify-between px-2 py-2 text-teal-500
                                            rounded-lg cursor-pointer hover:bg-gray-200">
                                        <input form="<?= $escaper->escapeHtmlAttr($massActionFormId) ?>"
                                               type="checkbox"
                                               value="<?= $escaper
                                                           ->escapeHtmlAttr(
                                                               $row
                                                                   ->getCell($grid->getMassActionIdColumn())
                                                                   ->getRawValue()
                                                           ) ?>"
                                               name="<?= $escaper->escapeHtmlAttr($grid->getMassActionIdsParam()) ?>[]"
                                               class="form-checkbox rowCheckbox focus:outline-none focus:shadow-outline"
                                               x-model="selectedRows"

                                        />
                                    </td>
                                <?php endif; ?>
                                <?php foreach ($row->getCells() as $cell): ?>
                                    <td class="col-<?= $escaper->escapeHtmlAttr($cell->getColumnDefinition()->getKey()); ?>"
                                        <?= $escaper->escapeHtml($rowActionAttribute) ?>
                                        x-show="isColumnVisible('col-<?= $escaper
                                            ->escapeHtmlAttr($cell->getColumnDefinition()->getKey()) ?>')"
                                    >
                                        <?= $cell->getHtml() ?>
                                    </td>
                                <?php endforeach; ?>
                                <?php if ($actions): ?>
                                    <td class="px-3 text-right border border-gray-100 actions">
                                        <?php foreach ($actions as $action): ?>
                                            <a class="px-3 font-medium text-blue-800 whitespace-no-wrap
                                                hover:text-blue-600"
                                               href="<?= $escaper
                                                   ->escapeUrl($block->getUrl(
                                                       $action->getUrl(),
                                                       $action->getParams($row)
                                                   )) ?>">
                                                <?= $escaper->escapeHtml($action->getLabel()) ?>
                                            </a>
                                        <?php endforeach; ?>
                                    </td>
                                <?php endif; ?>
                            </tr>
                        <?php endforeach; ?>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
    <script>
        function initDataTable<?= /** @noEscape */ $uniqueId ?>() {

            return {
                refs: false,
                selectedRows: [],
                hiddenCols: [],
                massActionStorageName: '<?= $escaper->escapeHtml($grid->getGridName()) . '-selectedRows' ?>',
                hiddenColsStorageName: '<?= $escaper->escapeHtml($grid->getGridName()) . '-hiddenCols' ?>',

                headings: [
                    <?php foreach ($grid->getColumnDefinitions() as $column): ?>
                    {
                        'key': 'col-<?= $escaper->escapeHtml($column->getKey()) ?>',
                        'value': '<?= $escaper->escapeHtml($column->getLabel()) ?>'
                    },
                    <?php endforeach; ?>
                ],

                open: false,

                initState() {
                    this.$watch('selectedRows', this.storeSelectedRows.bind(this));
                    this.$watch('hiddenCols', this.storeHiddenColumns.bind(this));
                    this.selectedRows = this.getSelectedRows();
                    this.hiddenCols = this.getHiddenCols();
                },

                getSelectedRows() {
                    const selectedRowsJson = window.sessionStorage.getItem(this.massActionStorageName);
                    return selectedRowsJson ? JSON.parse(selectedRowsJson) : [];
                },

                getHiddenCols() {
                    const hiddenColsJson = window.sessionStorage.getItem(this.hiddenColsStorageName);
                    return hiddenColsJson ? JSON.parse(hiddenColsJson) : [];
                },

                toggleColumn(key) {
                    const index = this.hiddenCols.indexOf(key);
                    if (index !== -1) {
                        this.hiddenCols.splice(index, 1);
                    } else {
                        this.hiddenCols.push(key);
                    }
                },

                isColumnVisible(key) {
                    return ! this.hiddenCols.includes(key);
                },

                storeHiddenColumns() {
                    this.storeValues(this.hiddenColsStorageName, this.hiddenCols);
                },

                storeSelectedRows() {
                    this.storeValues(this.massActionStorageName, this.selectedRows);
                },

                storeValues(key, values) {
                    window.sessionStorage.setItem(key, JSON.stringify(values.filter(value => null !== value)));
                },

                selectAllCheckbox($event) {
                    const checked = !!$event.target.checked;
                    document.querySelectorAll('.rowCheckbox').forEach(checkbox => {
                        const index = this.selectedRows.indexOf(checkbox.value);
                        if (checked && index === -1) {
                            this.selectedRows.push(checkbox.value);
                        } else if (! checked && index > -1) {
                            this.selectedRows.splice(index, 1);
                        }
                    });
                },

                doMassAction(option) {
                    const url = option.value;
                    const form = this.refs['massaction-form'];
                    const checked = this.getSelectedRows();
                    const select = this.refs['massaction-select'];

                    if (!url || !form || !select) {
                        return;
                    }

                    if (checked.length === 0) {
                        alert('Please select the records to apply the mass action to.');
                        select.selectedIndex = 0;
                        return;
                    }
                    if (option.dataset.requireConfirm === 'true' && ! confirm('Are you sure?')) {
                        select.selectedIndex = 0;
                        return;
                    }
                    const rowCheckboxName = '<?= $escaper->escapeHtml($grid->getMassActionIdsParam()) ?>[]';

                    const alreadyPresent = Array.from(form.elements)
                        .filter(element =>  element.name === rowCheckboxName)
                        .filter(element => element.checked)
                        .map(element => element.value);

                    const missing = checked.filter(value => ! alreadyPresent.includes(value));

                    missing.forEach(value => {
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = rowCheckboxName;
                        input.value = value;
                        form.append(input);
                    });

                    form.action = url;

                    this.resetFormState();

                    form.submit();
                },

                resetFormState() {
                    this.selectedRows = [];

                    if (this.refs && this.refs['select-all']) {
                        this.refs['select-all'].checked = false;
                    }

                    if (this.refs && this.refs['massaction-select']) {
                        this.refs['massaction-select'].value = 0;
                    }
                }
            }
        }
    </script>
<div class="container px-4 py-6 mx-auto">
    <?php if (!$grid->getRows()) { ?>
        <div>
            <?= $escaper->escapeHtml(
                __('No %1 found.', $grid->getEntityDefinition()->getLabelPlural())
            ) ?>
        </div>
    <?php } ?>
</div>
